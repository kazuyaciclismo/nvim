# dein.vim
#   プラグイン管理
[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_i = 1
hook_source = '''
    let g:deoplete#enable_at_startup = 1
    let g:deoplete#enable_ignore_case = 1
    let g:deoplete#enable_smart_case = 1
'''

[[plugins]]
repo = 'Shougo/neco-vim'

[[plugins]]
repo = 'Shougo/neco-syntax'

# lightline.vim
#   ステータスバー拡張
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
    let g:lightline = {'colorscheme': 'wombat'}
'''

# vim-toml
#    ???
[[plugins]]
repo  = 'cespare/vim-toml'

# vim-fugitive
#   git操作用
#   Key Mapはinit.vimに定義
[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'junegunn/fzf'
build = './install --bin'
merged = '0'

# fzf
#   選択的インターフェイス
#   :Rg <word>
#   http://someneat.hatenablog.jp/entry/2017/03/12/011335
[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'
hook_add = '''
    command! -bang -nargs=* Rg
      \ call fzf#vim#grep(
      \   'rg --line-number --no-heading '.shellescape(<q-args>), 0,
      \   fzf#vim#with_preview({'options': '--exact --reverse --delimiter : --nth 3..'}, 'right:50%:wrap'))
'''

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
        nnoremap [denite] <Nop>
        nmap     <Space>u [denite]
        nnoremap <silent> [denite]b   :<C-u>Denite buffer<CR>
        nnoremap <silent> [denite]f   :<C-u>Denite file_rec<CR>

        " grep
        call denite#custom#var('file_rec', 'command', ['rg', '--files', '--glob', '!.git'])
        call denite#custom#var('grep', 'command', ['rg', '--threads', '1'])
        call denite#custom#var('grep', 'recursive_opts', [])
        call denite#custom#var('grep', 'final_opts', [])
        call denite#custom#var('grep', 'separator', ['--'])
        call denite#custom#var('grep', 'default_opts', ['--vimgrep', '--no-heading'])

        " カーソル位置のgrep
        nnoremap <silent> ,g :<C-u>DeniteCursorWord grep    -buffer-name=search-buffer-cw<CR>
        nnoremap <silent> ,r :<C-u>DeniteCursorWord -resume -buffer-name=search-buffer-cw<CR>
        nnoremap <silent> ,n :<C-u>DeniteCursorWord -resume -immediately -buffer-name=search-buffer-cw -select=+1<CR>
        nnoremap <silent> ,p :<C-u>DeniteCursorWord -resume -immediately -buffer-name=search-buffer-cw -select=-1<CR>

        " Deniteの出力画面の操作
        call denite#custom#map('insert', "<C-n>", '<denite:move_to_next_line>', 'noremap')
        call denite#custom#map('insert', "<C-p>", '<denite:move_to_previous_line>', 'noremap')
        call denite#custom#map('insert', "<C-v>", '<denite:do_action:vsplit>')
        call denite#custom#source('file_rec', 'matchers', ['matcher_fuzzy','matcher_ignore_globs'])
        call denite#custom#filter('matcher_ignore_globs', 'ignore_globs',
              \ [
              \ '.git/', 'build/', '__pycache__/',
              \ 'images/', '*.o', '*.make',
              \ '*.min.*',
              \ 'img/', 'fonts/'])
'''

# gtags.vim
#   GNU Global用
#   Key Mapはinit.vimに定義
[[plugins]]
repo = 'lighttiger2505/gtags.vim'
hook_add = '''
        let g:Gtags_Auto_Map = 0
        let g:Gtags_OpenQuickfixWindow = 1
'''

# gen_tags.vim
#  タグ生成の自動化
#  タグの生成先が.cache以下なので注意すること。ターミナルから生成しても参照されない
#  通常は特に何もしなくてもファイル保存時にtagファイルを更新してくれる
#  https://qiita.com/coil_msp123/items/cb36e6698aa6734a901e
[[plugins]]
repo = 'jsfaint/gen_tags.vim'
hook_add = '''
        let g:gen_tags#gtags_auto_gen = 1
        let g:gen_tags#statusline = 1
'''


